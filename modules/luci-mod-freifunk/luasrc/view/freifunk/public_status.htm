<%
local utl = require "luci.util"
local sys = require "luci.sys"
local twa = require "luci.tools.webadmin"
local ip  = require "luci.ip"

-- System

local sysinfo = utl.ubus("system", "info") or { }
local boardinfo = utl.ubus("system", "board") or { }

local loads = sysinfo.load or { 0, 0, 0 }
local meminfo = sysinfo.memory or {
	total = 0,
	free = 0,
	buffered = 0,
	shared = 0
}

local uptime = twa.date_format(sysinfo.uptime or 0)
local time = os.date("%a, %d %b %Y, %H:%M:%S")
local load = string.format("%.2f, %.2f, %.2f", loads[1] / 65535.0, loads[2] / 65535.0, loads[3] / 65535.0)

local mem = string.format(
	"%.2f MB (%.2f %s, %.2f %s, %.2f %s)",
	meminfo.total / 1024 / 1024,
	(meminfo.total - meminfo.free) / 1024 / 1024,
	tostring(i18n.translate("used")),
	meminfo.free / 1024 / 1024,
	tostring(i18n.translate("free")),
	meminfo.buffered / 1024 / 1024,
	tostring(i18n.translate("buffered"))
)

local interval = 5

-- wireless
local ntm = require "luci.model.network".init()
local devices  = ntm:get_wifidevs()
local netlist = { }
local netdevs = { }
local dev
for _, dev in ipairs(devices) do
	local net
	for _, net in ipairs(dev:get_wifinets()) do
		netlist[#netlist+1] = net:ifname()
		netdevs[net:ifname()] = dev:name()
	end
end
local has_iwinfo = pcall(require, "iwinfo")


-- Find default routes

local _, r, def4, def6

for _, r in ipairs(ip.routes({ type = 1, dest_exact = "0.0.0.0/0" })) do
	def4 = {
		gateway = r.gw:string(),
		dest = r.dest:string(),
		dev = r.dev,
		metr = r.metric or 0
	}
	break
end

for _, r in ipairs(ip.routes({ type = 1, dest_exact = "::/0" })) do
	def6 = {
		gateway = r.gw:string(),
		dest = r.dest:string(),
		dev = r.dev,
		metr = r.metric or 0
	}
	break
end


if luci.http.formvalue("status") == "1" then
	local rv = { }
	for dev in pairs(netdevs) do
		local j = { id = dev }
		local iw = luci.sys.wifi.getiwinfo(dev)
		if iw then
			local f
			for _, f in ipairs({
				"channel", "txpower", "bitrate", "signal", "noise",
				"quality", "quality_max", "mode", "ssid", "bssid", "encryption", "ifname"
			}) do
				j[f] = iw[f]
			end
		end
		rv[#rv+1] = j
	end


	rv[#rv+1] = {
		time = time,
		uptime = uptime,
		load = load,
		mem = mem,
		defroutev4 = def4,
		defroutev6 = def6
	}

	luci.http.prepare_content("application/json")
	luci.http.write_json(rv)
	return
end
-%>

<%+header%>


<script type="text/javascript">//<![CDATA[
	 XHR.poll(<%=interval%> , '<%=REQUEST_URI%>', { status: 1 },
		function(x, st)
		{

				i = st.length - 1
				var u

				if (u = document.getElementById('dynuptime'))
					u.innerHTML = st[i].uptime;

				if (u = document.getElementById('dynload'))
					u.innerHTML = st[i].load;

				if (u = document.getElementById('dynmem'))
					u.innerHTML = st[i].mem;

				if (u = document.getElementById('dyntime'))
					u.innerHTML = st[i].time;

				if (st[i].defroutev4)
				{
					if (u = document.getElementById('v4dst'))
						u.innerHTML = st[i].defroutev4.dest;

					if (u = document.getElementById('v4gw'))
						u.innerHTML = st[i].defroutev4.gateway;

					if (u = document.getElementById('v4dev'))
						u.innerHTML = st[i].defroutev4.dev;

					if (u = document.getElementById('v4metr'))
						u.innerHTML = st[i].defroutev4.metr;
				}

				if (st[i].defroutev6)
				{
					if (u = document.getElementById('v6dst'))
						u.innerHTML = st[i].defroutev6.dest;

					if (u = document.getElementById('v6gw'))
						u.innerHTML = st[i].defroutev6.gateway;

					if (u = document.getElementById('v6dev'))
						u.innerHTML = st[i].defroutev6.dev;

					if (u = document.getElementById('v6metr'))
						u.innerHTML = st[i].defroutev6.metr;
				}
			}
		}
	);
//]]></script>

<div class="cbi-map">
	<h2><%:System%></h2>
	<div class="cbi-section-node">
		<div class="cbi-value"><label class="cbi-value-title"><%:System%></label><div class="cbi-value-field"><%=boardinfo.system or "?"%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Model%></label><div class="cbi-value-field"><%=boardinfo.model or "?"%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Load%></label><div class="cbi-value-field" id="dynload"><%=load%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Memory%></label><div class="cbi-value-field" id="dynmem"><%=mem%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Local Time%></label><div class="cbi-value-field" id="dyntime"><%=time%></div></div>
		<div class="cbi-value"><label class="cbi-value-title"><%:Uptime%></label><div class="cbi-value-field" id="dynuptime"><%=uptime%></div></div>
	</div>
</div>

<div class="cbi-map">
	<h2><%:Default routes%></h2>
		<div class="cbi-section">
			<div class="cbi-section-node">

<% if not def4 and not def6 then %>
	<%:No default routes known.%>
<%else%>
				<div class="table cbi-section-table">
						<div class="tr cbi-section-table-titles">
							<div class="th cbi-section-table-cell"><%:Network%></div>
							<div class="th cbi-section-table-cell"><%:Interface%></div>
							<div class="th cbi-section-table-cell"><%:Gateway%></div>
							<div class="th cbi-section-table-cell"><%:Metric%></div>
						</div>

	<% if def4 then %>
						<div class="tr cbi-section-table-row cbi-rowstyle-1">
							<div class="td cbi-value-field" id="v4dst"><%=def4.dest%></div>
							<div class="td cbi-value-field" id="v4dev"><%=def4.dev%></div>
							<div class="td cbi-value-field" id="v4gw"><%=def4.gateway%></div>
							<div class="td cbi-value-field" id="v4metr"><%=def4.metr%></div>
						</div>

	<% end
	if def6 then %>

						<div class="tr cbi-section-table-row cbi-rowstyle-2">
							<div class="td cbi-value-field" id="v6dst"><%=def6.dest%></div>
							<div class="td cbi-value-field" id="v6dev"><%=def6.dev%></div>
							<div class="td cbi-value-field" id="v6gw"><%=def6.gateway%></div>
							<div class="td cbi-value-field" id="v6metr"><%=def6.metr%></div>
						</div>

	<% end %>

				</div>
<% end %>
		</div>
	</div>
</div>
<%+footer%>
